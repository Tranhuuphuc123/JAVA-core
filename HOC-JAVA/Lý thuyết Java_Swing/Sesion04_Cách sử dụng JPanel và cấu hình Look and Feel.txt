****************************CÁCH SỬ DỤNG JPANEL VÀ CẤU HÌNH LOOK AND FEEL TỎNG GIAO DIỆN JAVA*******************************
>>>>> Khái niệm:
 - JPanel trong Java Swing được sử dụng để tạo ra các container nơi chứa các phần tử khác. Container là thành phần chủ chốt trong các 
 thành phần của SWING GUI. Một Container cung cấp một không gian, là nơi đặt một thành phần. Một Container trong AWT chính là một Component 
 và nó có thêm khả năng để thêm các thành phần khác vào chính nó.

 - Các lớp con của Container được gọi là Container hay jComponent. Một số ví dụ về các lớp con của Container là JPanel, JFrame và JWindow...

 - Một layout mặc định có mặt trong mỗi container. Layout này có thể bị ghi đè bởi sử dụng phương thức setLayout().


>>>>>> cú pháp:
 => lib hổ trợ: lớp jpanel kế thừa từ mấy lớp sau:
          
                javax.swing.JComponent

                java.awt.Container

                java.awt.Component

                java.lang.Object

                javax.swing.JPanel


 => cú pháp:

                    JPanel name = new JPanel();




>>>>>> Look and feel: 
 - Pluggable Look-and-Feel là một trong số những tính năng của Swing. Nó cho phép ứng dụng Swing có thể thay đổi toàn bộ giao diện chỉ với 
 một hai dòng code.
   + “Look” ở đây đại diện cho thành phần GUI bên ngoài của component(tức giao diện nhìn thấy).
   +  trong khi “Feel” đại diện cho phần behave (ví dụ như hiệu ứng khi hover, khi click,…).
   ======> Bạn có thể tưởng tượng LaF giống như theme trong điện thoại vậy. Chỉ với vài thao tác bấm, bạn có thể chọn qua lại giữa các theme
    trong điện thoại.
   =====> nói tóm lại khi set look and feel thì nó sẽ cho ra kết quả hiển thị theo một layout cụ thể hổ trợ cho hệ điều hành tương ứng
   , cho ta cách nhìn về giao diện tương thích với hiệ điều hành đẹp hơn mà thui.
 

  ### các look and feel tương thích các hệ điều hành:
   
              Look and feel                                  hệ điều hành tg thích hỗ trợ

                GTK+                                       Solaris, Linux with GTK+ 2.2 or later
                Motif                                       Other Solaris, Linux
                Windown                                     Classic Windows
                ....

   ==> các laf:
        com.sun.java.swing.plaf.gtk.GTKLookAndFeel
        com.sun.java.swing.plaf.motif.MotifLookAndFeel
        com.sun.java.swing.plaf.windows.WindowsLookAndFeel





  ### thiết lập Look and Feel:
     ===> dùng mỗi cái thui. dưới đây các laf liệt kê

                try {
            //          UIManager.setLookAndFeel("com.sun.java.swing.plaf.gtk.GTKLookAndFeel");
            //		    UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
            //			UIManager.setLookAndFeel("com.sun.java.swing.plaf.motif.MotifLookAndFeel");

                        UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }	





















--------------------------------------------------------------------------------------------------------------------------------
****** Phần chưa thực nghiệm sẽ text lại sau khi code gặp phải*****************

>>>>> lớp này có các contructor sau:
 - JPanel(): Tạo một JPanel mới với một double buffer và một Flow Layout(xem phần layout bố cục giao diện sẽ rõ).

 - JPanel(boolean isDoubleBuffered): Tạo một JPanel mới với Flow Layout và trình đệm đã xác định.

 - JPanel(LayoutManager layout): Tạo một JPanel mới với Layout Manager đã cho

 - JPanel(LayoutManager layout, boolean isDoubleBuffered): Tạo một JPanel mới với Layout Manager đã cho và trình đệm đã xác định.






>>>>> Các phương thức của lớp JPanel:

 -  AccessibleContext getAccessibleContext(): Lấy AccessibleContext được liên kết với JPanel này.

 -  PanelUI getUI(): Trả về đối tượng L&F mà truyền thành phần này

 -  String getUIClassID(): Trả về một chuỗi xác định tên của lớp L&F mà truyền thành phần này

 -  protected String paramString(): Trả về một biểu diễn chuỗi của JPanel này

 - void setUI(PanelUI ui): Thiết lập đối tượng L&F mà truyền thành phần này

 - void updateUI():Phục hồi thuộc tính UI về một giá trị Look và Feel hiện tại.




 >>>>>  